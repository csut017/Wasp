<Window x:Class="Wasp.UI.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:data="clr-namespace:Wasp.UI.Windows"
        mc:Ignorable="d"
        Title="WASP: Battle Builder" Height="450" Width="800">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="OnClose" />
        <CommandBinding Command="ApplicationCommands.New" Executed="OnNewOrderOfBattle" />
        <CommandBinding Command="ApplicationCommands.Open" Executed="OnOpenRoster" />
        <CommandBinding Command="ApplicationCommands.Save" Executed="OnSaveRoster" />
        <CommandBinding Command="ApplicationCommands.SaveAs" Executed="OnSaveAsRoster" />

        <CommandBinding Command="data:CustomCommands.DeselectUnit" Executed="OnDeselectUnit" />
        <CommandBinding Command="data:CustomCommands.ImportRoster" Executed="OnImportRoster" />
        <CommandBinding Command="data:CustomCommands.ReportDataSheets" Executed="OnGenerateDataSheetsReport" CanExecute="AreUnitsSelected" />
        <CommandBinding Command="data:CustomCommands.ReportOrderOfBattle" Executed="OnGenerateOrderOfBattleReport" CanExecute="AreUnitsSelected" />
        <CommandBinding Command="data:CustomCommands.SelectUnit" Executed="OnSelectUnit" />
        <CommandBinding Command="data:CustomCommands.AddArmy" Executed="OnAddArmy" />
    </Window.CommandBindings>
    <Window.Resources>
        <AlternationConverter x:Key="BackgroundConverter">
            <SolidColorBrush>White</SolidColorBrush>
            <SolidColorBrush>LightBlue</SolidColorBrush>
        </AlternationConverter>
        <AlternationConverter x:Key="AlternateForegroundConverter">
            <SolidColorBrush>Navy</SolidColorBrush>
            <SolidColorBrush>Black</SolidColorBrush>
        </AlternationConverter>
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},
                     Path=(ItemsControl.AlternationIndex), Converter={StaticResource BackgroundConverter}}" />
            <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Self},
                     Path=(ItemsControl.AlternationIndex), Converter={StaticResource AlternateForegroundConverter}}" />
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="IsExpanded" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"
                                              Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="16" />
                                            <Setter Property="FrameworkElement.Height" Value="16" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                                        Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header" Content="{TemplateBinding HeaderedContentControl.Header}"
                                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                      ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                      ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="_File">
                <MenuItem Header="_New Order of Battle" Command="ApplicationCommands.New">
                    <MenuItem.Icon>
                        <Image Source="images\new-order-of-battle.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open">
                    <MenuItem Header="_BattleScribe Roster" Command="data:CustomCommands.ImportRoster">
                        <MenuItem.Icon>
                            <Image Source="images\load_battlescribe.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Order of Battle" Command="ApplicationCommands.Open">
                        <MenuItem.Icon>
                            <Image Source="images\load-order-of-battle.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Save" Command="ApplicationCommands.Save">
                    <MenuItem.Icon>
                        <Image Source="images\save-order-of-battle.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save _As" Command="ApplicationCommands.SaveAs" />
                <Separator />
                <MenuItem Header="E_xit" Command="ApplicationCommands.Close" />
            </MenuItem>
            <MenuItem Header="_Reports">
                <MenuItem Header="_Crusade Cards" Command="data:CustomCommands.ReportOrderOfBattle">
                    <MenuItem.Icon>
                        <Image Source="images\report-order-of-battle.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Datasheets" Command="data:CustomCommands.ReportDataSheets">
                    <MenuItem.Icon>
                        <Image Source="images\report-datasheets.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <ToolBarTray Grid.Row="1" IsLocked="True">
            <ToolBar>
                <Button Command="data:CustomCommands.ImportRoster">
                    <Button.Content>
                        <Image Source="images\load_battlescribe.png" Height="20" Width="20" />
                    </Button.Content>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5" Text="Import" />
                            <TextBlock Text="Import a BattleScribe army definition" />
                        </StackPanel>
                    </Button.ToolTip>
                </Button>
                <Button Command="ApplicationCommands.Open">
                    <Button.Content>
                        <Image Source="images\load-order-of-battle.png" Height="20" Width="20" />
                    </Button.Content>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5" Text="Open" />
                            <TextBlock Text="Open an existing order of battle definition" />
                        </StackPanel>
                    </Button.ToolTip>
                </Button>
                <Separator />
                <Button Command="ApplicationCommands.Save">
                    <Button.Content>
                        <Image Source="images\save-order-of-battle.png" Height="20" Width="20" />
                    </Button.Content>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5" Text="Save" />
                            <TextBlock Text="Saves the current order of battle definition" />
                        </StackPanel>
                    </Button.ToolTip>
                </Button>
                <Separator />
                <Button Command="data:CustomCommands.ReportOrderOfBattle">
                    <Button.Content>
                        <Image Source="images\report-order-of-battle.png" Height="20" Width="20" />
                    </Button.Content>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5" Text="Crusade Cards Report" />
                            <TextBlock Text="Generate a PDF containing the crusade cards for the order of battle" />
                        </StackPanel>
                    </Button.ToolTip>
                </Button>
                <Button Command="data:CustomCommands.ReportDataSheets">
                    <Button.Content>
                        <Image Source="images\report-datasheets.png" Height="20" Width="20" />
                    </Button.Content>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5" Text="Datasheets Report" />
                            <TextBlock Text="Generate a PDF containing the datasheets for the order of battle" />
                        </StackPanel>
                    </Button.ToolTip>
                </Button>
                <Separator />
                <Button Command="data:CustomCommands.AddArmy">
                    <Button.Content>
                        <Image Source="images\add-to-order.png" Height="20" Width="20" />
                    </Button.Content>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5" Text="Add Army" />
                            <TextBlock Text="Adds a new army" />
                        </StackPanel>
                    </Button.ToolTip>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TreeView Grid.Column="0" ItemsSource="{Binding Path=AvailableUnits}" BorderThickness="0" Name="availableItems">
                <TreeView.Resources>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Items}" DataType="{x:Type data:CostedItemModel}">
                        <Border Padding="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding Name}" FontWeight="Bold" />
                                <TextBlock Grid.Row="1" Text="{Binding Cost, StringFormat={}{0} points}" />

                                <Button Grid.Column="1" Grid.RowSpan="2" Background="Transparent" BorderThickness="0" Margin="10,0,0,0"
                                        VerticalAlignment="Center" Command="data:CustomCommands.SelectUnit">
                                    <Image Source="Images\add-to-order.png" Height="16" Width="16" Margin="5,5" />
                                </Button>
                            </Grid>
                        </Border>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Items}" DataType="{x:Type data:ItemModel}">
                        <Border Padding="5">
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name}" />
                            </StackPanel>
                        </Border>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>

            <GridSplitter Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="True" Width="5" />

            <TreeView Grid.Column="2" Grid.RowSpan="2" ItemsSource="{Binding Path=SelectedUnitsView}" BorderThickness="0" Name="selectedItems" SelectedItemChanged="OnSelectArmyUnit">
                <TreeView.Resources>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=ItemsView}" DataType="{x:Type data:CostedItemModel}">
                        <Border Padding="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="{Binding Name}" FontWeight="Bold" />
                                <TextBlock Grid.Row="1" Text="{Binding Cost, StringFormat={}{0} points}" />
                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding CostDifference, StringFormat=[{0} points]}" x:Name="costDifference" Margin="3,0,0,0"
                                           Style="{StaticResource hiddenField}"/>

                                <Button Grid.Column="2" Grid.RowSpan="2" Background="Transparent" BorderThickness="0" Margin="10,0,0,0"
                                        VerticalAlignment="Center" Command="data:CustomCommands.DeselectUnit">
                                    <Image Source="Images\remove-from-order.png" Height="16" Width="16" Margin="5,5" />
                                </Button>
                            </Grid>
                        </Border>
                        <HierarchicalDataTemplate.Resources>
                            <Style TargetType="TextBlock" x:Key="hiddenField">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </HierarchicalDataTemplate.Resources>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding ArmyRoster}" Value="{x:Null}">
                                <Setter TargetName="costDifference" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Items}" DataType="{x:Type data:ItemModel}">
                        <Border Padding="5">
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name}" />
                            </StackPanel>
                        </Border>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>

            <TextBlock Margin="10,5" Grid.Row="1" Grid.Column="0" Text="{Binding AvailablePoints, StringFormat={}{0} points}" />
        </Grid>
    </Grid>
</Window>